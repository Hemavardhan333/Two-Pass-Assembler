00000000 00000000 ldc 0         ; Initialize A to 0 (sum accumulator)
00000001 00000003 stl 0         ; Store sum (initialize sum memory location)
00000002 FFFFFF02 ldl -1        ; Load n (count of numbers)
00000003 00000103 stl 1         ; Store n in memory location 1 (for division later)
00000004 00000000 ldc 0         ; Initialize A to 0 (index counter)
00000005 00000203 stl 2         ; Store index in memory location 2
                  
00000006          loop:
00000006 00000202     ldl 2         ; Load current index
00000007 FFFFFF02     ldl -1        ; Load n
00000008 00000007     sub           ; Check if index < n
00000009 0000090F     brz end       ; If index == n, end loop
                  
0000000A 00000002     ldl 0         ; Load current sum
0000000B 00000204     ldnl 2        ; Load number at current index
0000000C 00000006     add           ; Add number to sum
0000000D 00000003     stl 0         ; Store new sum
                  
0000000E 00000202     ldl 2         ; Load current index
0000000F 00000100     ldc 1         ; Increment index by 1
00000010 00000006     add
00000011 00000203     stl 2         ; Store incremented index
                  
00000012 FFFFF311     br loop       ; Repeat loop
                  
00000013          end:
00000013 00000002     ldl 0         ; Load final sum
00000014 00000102     ldl 1         ; Load n
00000016 00000303     stl 3         ; Store mean in memory location 3
                  
00000017 00000012 HALT             ; End program
